plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}", {
		exclude module: "fabric-api"
	}

	modImplementation "maven.modrinth:sodium:${project.sodium}", {
		exclude module: "fabric-api"
	}

	modImplementation "maven.modrinth:iris:${project.iris}", {
		exclude module: "fabric-api"
	}

	modApi("maven.modrinth:toadlib:${project.toadlib_version}") {
		exclude module: "fabric-api"
	}
}

base {
	version = project.mod_version
	group = project.maven_group
	archivesName = project.archives_base_name
}

loom {
	mixin.defaultRefmapName = "palladium.refmap.json"
	accessWidenerPath = file("src/main/resources/palladium.accesswidener")
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

repositories {
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}

	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases"
	}

	maven {
		name = "Shedaniel's Maven"
		url = "https://maven.shedaniel.me/"
	}
}
